# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "nvme" "uas" "sd_mod" "sdhci_pci" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/6d848414-7ed6-4c03-9d19-23f7d9b9ecb6";
      fsType = "ext4";
    };
  fileSystems."/var/lib/libvirt/images" =
    { device = "/dev/disk/by-uuid/54a3374e-05b5-4e8e-bfd0-9b1873586f75";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-9c1cb217-1e15-4bf2-b385-e5a1915eb984".device = "/dev/disk/by-uuid/9c1cb217-1e15-4bf2-b385-e5a1915eb984";

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/A839-B999";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp3s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
